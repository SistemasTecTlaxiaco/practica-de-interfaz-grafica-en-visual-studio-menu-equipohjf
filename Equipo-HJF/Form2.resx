<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>